snippet rcc "React Class Component" b
import * as React from 'react';
import * as PropTypes from 'prop-types';
import styles from './${2:$1}.css';

class ${1:`!v expand('%:t:r')`} extends ReactComponent {
	static propTypes = {
		${2:children: PropTypes.node,
		className: PropTypes.string,}
	};

	constructor(props) {
		super(props);
	}

	render() {
		return (
			<${3:div} className={styles.base}>
				$0
			</$3>
		);
	}
}

export default $1;
endsnippet

snippet rfc "React Functional Component" b
import * as React from 'react';
import * as PropTypes from 'prop-types';
import styles from './${2:$1}.scss';

const ${1:`!v expand('%:t:r')`} : React.FC = () : React.ReactElement => {
	return (
		<${5:div} className={styles.base}>
			$0
		</$5>
	);
}

$1.defaultProps = {$4};

$1.propTypes = {`!p
props = t[3]
if props:
  snip >> 1
  for prop in props.split(', '):
    snip += prop + ': PropTypes.any,'
`
};

export default $1;
endsnippet
